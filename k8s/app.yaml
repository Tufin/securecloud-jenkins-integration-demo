apiVersion: batch/v1
kind: Job
metadata:
  name: job-demo
spec:
  completions: 5
  template:
    metadata:
      name: job-demo
      labels:
        app: curl
        demo: "true"
    spec:
      containers:
      - name: job-demo
        image: curlimages/curl
        command: ["/bin/sh","-c"]
        args: ["curl --header 'x-auth-tenant:miri-test' http://guru.orca.svc.cluster.local/model/clusters/securecloud/connector-status; sleep 5"]
      restartPolicy: OnFailure
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: job-demo-cronjob
spec:
  schedule: "*/1 * * * *"
  jobTemplate:
    metadata:
      labels:
        app: curl
        demo: "true"
    spec:
      template:
        metadata:
          name: job-demo-cronjob
          labels:
            app-inner: curl-inner
            demo-inner: "true-inner"
        spec:
          containers:
          - name: job-demo-cronjob
            image: curlimages/curl
            command: ["/bin/sh","-c"]
            args: ["curl --header 'x-auth-tenant:miri-test' http://guru.orca.svc.cluster.local/model/clusters/securecloud/connector-status; sleep 5"]
          restartPolicy: OnFailure
---
apiVersion: v1
kind: Pod
metadata:
  name: standalone-pod-demo
spec:
  hostNetwork: true
  containers:
  - name: standalone-pod-demo
    image: curlimages/curl
    command: ["/bin/sh","-c"]
    args: ["for i in `seq 1 10`; do curl --header 'x-auth-tenant:miri-test' http://guru.orca.svc.cluster.local/model/clusters/securecloud/connector-status; sleep 5; done"]
  restartPolicy: OnFailure
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    deprecated.daemonset.template.generation: "2"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"gcp-compute-persistent-disk-csi-driver"},"name":"pdcsi-node","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"k8s-app":"gcp-compute-persistent-disk-csi-driver"}},"template":{"metadata":{"annotations":{"components.gke.io/component-name":"pdcsi-addon","components.gke.io/component-version":"0.8.9"},"labels":{"k8s-app":"gcp-compute-persistent-disk-csi-driver"}},"spec":{"containers":[{"args":["--v=5","--csi-address=/csi/csi.sock","--kubelet-registration-path=/var/lib/kubelet/plugins/pd.csi.storage.gke.io/csi.sock"],"env":[{"name":"KUBE_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}}],"image":"gke.gcr.io/csi-node-driver-registrar:v1.3.0-gke.0","name":"csi-driver-registrar","volumeMounts":[{"mountPath":"/csi","name":"plugin-dir"},{"mountPath":"/registration","name":"registration-dir"}]},{"args":["--v=5","--endpoint=unix:/csi/csi.sock"],"image":"gke.gcr.io/gcp-compute-persistent-disk-csi-driver:v1.0.1-gke.11","name":"gce-pd-driver","securityContext":{"privileged":true},"volumeMounts":[{"mountPath":"/var/lib/kubelet","mountPropagation":"Bidirectional","name":"kubelet-dir"},{"mountPath":"/csi","name":"plugin-dir"},{"mountPath":"/dev","name":"device-dir"},{"mountPath":"/etc/udev","name":"udev-rules-etc"},{"mountPath":"/lib/udev","name":"udev-rules-lib"},{"mountPath":"/run/udev","name":"udev-socket"},{"mountPath":"/sys","name":"sys"}]}],"hostNetwork":true,"nodeSelector":{"kubernetes.io/os":"linux"},"priorityClassName":"system-node-critical","serviceAccountName":"pdcsi-node-sa","tolerations":[{"effect":"NoSchedule","operator":"Exists"},{"effect":"NoExecute","operator":"Exists"},{"key":"CriticalAddonsOnly","operator":"Exists"},{"key":"components.gke.io/gke-managed-components","operator":"Exists"}],"volumes":[{"hostPath":{"path":"/var/lib/kubelet/plugins_registry/","type":"Directory"},"name":"registration-dir"},{"hostPath":{"path":"/var/lib/kubelet","type":"Directory"},"name":"kubelet-dir"},{"hostPath":{"path":"/var/lib/kubelet/plugins/pd.csi.storage.gke.io/","type":"DirectoryOrCreate"},"name":"plugin-dir"},{"hostPath":{"path":"/dev","type":"Directory"},"name":"device-dir"},{"hostPath":{"path":"/etc/udev","type":"Directory"},"name":"udev-rules-etc"},{"hostPath":{"path":"/lib/udev","type":"Directory"},"name":"udev-rules-lib"},{"hostPath":{"path":"/run/udev","type":"Directory"},"name":"udev-socket"},{"hostPath":{"path":"/sys","type":"Directory"},"name":"sys"}]}},"updateStrategy":{"rollingUpdate":{"maxUnavailable":"10%"},"type":"RollingUpdate"}}}
  creationTimestamp: "2021-07-25T10:22:48Z"
  generation: 2
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: gcp-compute-persistent-disk-csi-driver
  name: pdcsi-node
  namespace: kube-system
  resourceVersion: "3633301"
  selfLink: /apis/apps/v1/namespaces/kube-system/daemonsets/pdcsi-node
  uid: 13c69d3f-3409-4d12-b4ad-1fb19111b2f2
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: gcp-compute-persistent-disk-csi-driver
  template:
    metadata:
      annotations:
        components.gke.io/component-name: pdcsi-addon
        components.gke.io/component-version: 0.8.9
      creationTimestamp: null
      labels:
        k8s-app: gcp-compute-persistent-disk-csi-driver
    spec:
      containers:
      - args:
        - --v=5
        - --csi-address=/csi/csi.sock
        - --kubelet-registration-path=/var/lib/kubelet/plugins/pd.csi.storage.gke.io/csi.sock
        env:
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        image: gke.gcr.io/csi-node-driver-registrar:v1.3.0-gke.0
        imagePullPolicy: IfNotPresent
        name: csi-driver-registrar
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /csi
          name: plugin-dir
        - mountPath: /registration
          name: registration-dir
      - args:
        - --v=5
        - --endpoint=unix:/csi/csi.sock
        image: gke.gcr.io/gcp-compute-persistent-disk-csi-driver:v1.0.1-gke.11
        imagePullPolicy: IfNotPresent
        name: gce-pd-driver
        resources: {}
        securityContext:
          privileged: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/kubelet
          mountPropagation: Bidirectional
          name: kubelet-dir
        - mountPath: /csi
          name: plugin-dir
        - mountPath: /dev
          name: device-dir
        - mountPath: /etc/udev
          name: udev-rules-etc
        - mountPath: /lib/udev
          name: udev-rules-lib
        - mountPath: /run/udev
          name: udev-socket
        - mountPath: /sys
          name: sys
      dnsPolicy: ClusterFirst
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: pdcsi-node-sa
      serviceAccountName: pdcsi-node-sa
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoSchedule
        operator: Exists
      - effect: NoExecute
        operator: Exists
      - key: CriticalAddonsOnly
        operator: Exists
      - key: components.gke.io/gke-managed-components
        operator: Exists
      volumes:
      - hostPath:
          path: /var/lib/kubelet/plugins_registry/
          type: Directory
        name: registration-dir
      - hostPath:
          path: /var/lib/kubelet
          type: Directory
        name: kubelet-dir
      - hostPath:
          path: /var/lib/kubelet/plugins/pd.csi.storage.gke.io/
          type: DirectoryOrCreate
        name: plugin-dir
      - hostPath:
          path: /dev
          type: Directory
        name: device-dir
      - hostPath:
          path: /etc/udev
          type: Directory
        name: udev-rules-etc
      - hostPath:
          path: /lib/udev
          type: Directory
        name: udev-rules-lib
      - hostPath:
          path: /run/udev
          type: Directory
        name: udev-socket
      - hostPath:
          path: /sys
          type: Directory
        name: sys
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 10%
    type: RollingUpdate
status:
  currentNumberScheduled: 3
  desiredNumberScheduled: 3
  numberAvailable: 3
  numberMisscheduled: 0
  numberReady: 3
  observedGeneration: 2
  updatedNumberScheduled: 3

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "2"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","app":"stackdriver-metadata-agent","kubernetes.io/cluster-service":"true"},"name":"stackdriver-metadata-agent-cluster-level","namespace":"kube-system"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"stackdriver-metadata-agent","cluster-level":"true"}},"strategy":{"rollingUpdate":{"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"annotations":{"components.gke.io/component-name":"stackdriver-metadata-agent","components.gke.io/component-version":"1.1.5"},"labels":{"app":"stackdriver-metadata-agent","cluster-level":"true"}},"spec":{"containers":[{"args":["-logtostderr","-v=1"],"env":[{"name":"CLUSTER_NAME","value":"securecloud-cluster-staging"},{"name":"CLUSTER_LOCATION","value":"europe-west3-b"},{"name":"IGNORED_RESOURCES","value":"replicasets.v1.apps,replicasets.v1beta1.extensions"}],"image":"gcr.io/stackdriver-agents/metadata-agent-go:1.2.0","imagePullPolicy":"IfNotPresent","name":"metadata-agent","securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["all"]},"runAsGroup":1000,"runAsNonRoot":true,"runAsUser":1000},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","volumeMounts":[{"mountPath":"/etc/ssl/certs","name":"ssl-certs"}]},{"command":["/pod_nanny","--config-dir=/etc/config","--cpu=40m","--extra-cpu=0.5m","--memory=80Mi","--extra-memory=2Mi","--threshold=5","--deployment=stackdriver-metadata-agent-cluster-level","--container=metadata-agent","--poll-period=300000","--estimator=exponential","--minClusterSize=16","--use-metrics=true"],"env":[{"name":"MY_POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"MY_POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}}],"image":"gke.gcr.io/addon-resizer:1.8.11-gke.1","name":"metadata-agent-nanny","resources":{"limits":{"memory":"90Mi"},"requests":{"cpu":"50m","memory":"90Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["all"]},"runAsGroup":1000,"runAsNonRoot":true,"runAsUser":1000},"volumeMounts":[{"mountPath":"/etc/config","name":"metadata-agent-config-volume"}]}],"dnsPolicy":"ClusterFirst","priorityClassName":"system-cluster-critical","restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{},"serviceAccountName":"metadata-agent","terminationGracePeriodSeconds":5,"tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"key":"components.gke.io/gke-managed-components","operator":"Exists"}],"volumes":[{"hostPath":{"path":"/etc/ssl/certs","type":"Directory"},"name":"ssl-certs"},{"configMap":{"name":"metadata-agent-config"},"name":"metadata-agent-config-volume"}]}}}}
  creationTimestamp: "2021-07-25T10:22:41Z"
  generation: 2
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    app: stackdriver-metadata-agent
    kubernetes.io/cluster-service: "true"
  name: stackdriver-metadata-agent-cluster-level
  namespace: kube-system
  resourceVersion: "1258"
  selfLink: /apis/apps/v1/namespaces/kube-system/deployments/stackdriver-metadata-agent-cluster-level
  uid: 62e82473-14d0-494c-b06d-2f0010891cf2
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: stackdriver-metadata-agent
      cluster-level: "true"
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        components.gke.io/component-name: stackdriver-metadata-agent
        components.gke.io/component-version: 1.1.5
      creationTimestamp: null
      labels:
        app: stackdriver-metadata-agent
        cluster-level: "true"
    spec:
      containers:
      - args:
        - -logtostderr
        - -v=1
        env:
        - name: IGNORED_RESOURCES
          value: replicasets.v1.apps,replicasets.v1beta1.extensions
        image: gcr.io/stackdriver-agents/metadata-agent-go:1.2.0
        imagePullPolicy: IfNotPresent
        name: metadata-agent
        resources:
          limits:
            cpu: 48m
            memory: 112Mi
          requests:
            cpu: 48m
            memory: 112Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/ssl/certs
          name: ssl-certs
      - command:
        - /pod_nanny
        - --config-dir=/etc/config
        - --cpu=40m
        - --extra-cpu=0.5m
        - --memory=80Mi
        - --extra-memory=2Mi
        - --threshold=5
        - --deployment=stackdriver-metadata-agent-cluster-level
        - --container=metadata-agent
        - --poll-period=300000
        - --estimator=exponential
        - --minClusterSize=16
        - --use-metrics=true
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: gke.gcr.io/addon-resizer:1.8.11-gke.1
        imagePullPolicy: IfNotPresent
        name: metadata-agent-nanny
        resources:
          limits:
            memory: 90Mi
          requests:
            cpu: 50m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/config
          name: metadata-agent-config-volume
      dnsPolicy: ClusterFirst
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: metadata-agent
      serviceAccountName: metadata-agent
      terminationGracePeriodSeconds: 5
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - key: components.gke.io/gke-managed-components
        operator: Exists
      volumes:
      - hostPath:
          path: /etc/ssl/certs
          type: Directory
        name: ssl-certs
      - configMap:
          defaultMode: 420
          name: metadata-agent-config
        name: metadata-agent-config-volume
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2021-07-25T10:22:41Z"
    lastUpdateTime: "2021-07-25T10:22:41Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2021-07-25T10:22:41Z"
    lastUpdateTime: "2021-07-25T10:23:37Z"
    message: ReplicaSet "stackdriver-metadata-agent-cluster-level-859f56956" has successfully
      progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 2
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
---
